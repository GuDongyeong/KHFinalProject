<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">

	<select id="selectStuList" resultType="map">
		  	SELECT * FROM (
	  		SELECT rownum no, t.*
	  		FROM (
			  	SELECT * FROM Membership
				WHERE 1=1
<!-- 				AND user_id LIKE '%' || #{paging.search} || '%' -->
				<choose>
		        	<when test="category == 'UserNo'">
					     AND user_no LIKE '%' || #{paging.search} || '%'
		        	</when>
		        	<when test="category == '아이디'">
					     AND user_id LIKE '%' || #{paging.search} || '%'
		        	</when>
		        	<when test="category == '이름'">
				         AND user_name LIKE '%' || #{paging.search} || '%'
		        	</when>
		        	<otherwise>
					    AND user_no LIKE '%' || #{paging.search} || '%'
				        OR user_id LIKE '%' || #{paging.search} || '%'
		        		OR user_name LIKE '%' || #{paging.search} || '%'
		        	</otherwise>
		        </choose>
				ORDER BY user_no
			) t
			where user_actor = 2
			ORDER BY no ) x
		WHERE no between #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<select id="selectStuCnt" resultType="int">
		SELECT count(*) FROM (select * from Membership
		WHERE 1=1
<!-- 		AND user_id LIKE '%' || #{search} || '%' -->
		<choose>
			<when test="category == 'UserNo'">
				AND user_no LIKE '%' || #{search} || '%'
        	</when>
        	<when test="category == '아이디'">
		        AND user_id LIKE '%' || #{search} || '%'
        	</when>
        	<when test="category == '이름'">
		        AND user_name LIKE '%' || #{search} || '%'
        	</when>
        	<otherwise>
        		AND user_no LIKE '%' || #{search} || '%'
		        OR user_id LIKE '%' || #{search} || '%'
		        OR user_name LIKE '%' || #{search} || '%'
        	</otherwise>
        </choose>
		)
        where user_actor = 2
  	</select>
	
	<select id="selectStuDetail" resultType="MEMBERSHIP">
		SELECT * FROM Membership
		WHERE user_no = #{userno}
	</select>
	<!-- 본인이 작성한 질문게시판 조회 -->
	<select id="selectQuestionList" resultType="QUESTION">
		SELECT * FROM question
		WHERE user_no = #{userNo}
	</select>
	<select id="selectStuReviewList" resultType="Map">
		select r.*,
		    (select distinct m.user_id from review r, membership m where r.user_no = m.user_no and m.user_no = #{userNo}) stu_id
		, cl.teacher, m.user_name
		from review r, connected_lesson cl, membership m
		where r.conn_lesson_no = cl.conn_lesson_no 
		    and cl.teacher = m.user_no
		    and r.user_no = #{userNo}
		order by r.review_no
	</select>
	<select id="selectStuMarketList" resultType="MARKET">
		SELECT * FROM Market
		WHERE mk_writer = #{userNo}
	</select>
	
	<select id="selectTchCnt" resultType="int">
		SELECT count(*) FROM (select * from Membership
				WHERE 1=1
		<choose>
			<when test="category == 'UserNo'">
				AND user_no LIKE '%' || #{search} || '%'
        	</when>
        	<when test="category == '아이디'">
		        AND user_id LIKE '%' || #{search} || '%'
        	</when>
        	<when test="category == '이름'">
		        AND user_name LIKE '%' || #{search} || '%'
        	</when>
        	<otherwise>
		        AND user_id LIKE '%' || #{search} || '%'
		        OR user_name LIKE '%' || #{search} || '%'
        	</otherwise>
        </choose>
		)
        where user_actor = 1
	</select>
	
	
	<select id="selectTchList" resultType="map">
		SELECT * FROM (
			SELECT rownum no, t.*
			           FROM (
			select m.*, a.tch_file_no, a.tch_file_rename, a.save_path
			from membership m, (select f.tch_file_no, f.user_no fuser_no, f.tch_file_rename, f.save_path from teacherfile f
			where tch_file_rename like 'profile%') a
			where m.user_no = a.fuser_no(+)
<!-- 			and m.user_actor = 1 -->
			
			<choose>
               <when test="category == 'UserNo'">
                  AND user_no LIKE '%' || #{paging.search} || '%'
                 </when>
                 <when test="category == '아이디'">
                    AND user_id LIKE '%' || #{paging.search} || '%'
                 </when>
                 <when test="category == '이름'">
                     AND user_name LIKE '%' || #{paging.search} || '%'
                 </when>
                 <otherwise>
                    AND user_id LIKE '%' || #{paging.search} || '%'
<!--                     OR user_name LIKE '%' || #{paging.search} || '%' -->
                 </otherwise>
              </choose>
			
			
			order by m.user_no
			) t
         where user_actor = 1
         ORDER BY no ) x
      WHERE no between #{paging.startNo} AND #{paging.endNo}
   </select>
<!-- 	<select id="selectTchReviewList" resultType="Map"> -->
<!-- 		select r.*, a.user_id stu_id,  -->
<!-- 		    (select distinct m.user_id from review r, membership m where cl.teacher = m.user_no and cl.teacher=#{userNo}) tch_id -->
<!-- 		, cl.teacher, m.user_name -->
<!-- 		from review r, connected_lesson cl, membership m, (select distinct m.user_id from review r, membership m -->
<!-- 		    where m.user_no = r.user_no) a -->
<!-- 		where r.conn_lesson_no = cl.conn_lesson_no  -->
<!-- 		    and cl.teacher = m.user_no -->
<!-- 		    and cl.teacher = #{userNo} -->
<!-- 		order by r.review_no -->
<!-- 	</select> -->
	
	<!-- 내(선생님) 후기글 작성한 학생 id조회 -->
	<select id="selectTchReviewList" resultType="Map">
<!-- 		select r.*, m.user_id, c.teacher from review r -->
<!-- 		join membership m on m.user_no = r.user_no -->
<!-- 		join connected_lesson c on c.conn_lesson_no = r.conn_lesson_no -->
<!-- 		where c.teacher = #{userNo} -->
		select r.*, m.user_id, c.teacher from review r
		join membership m on m.user_no = r.user_no
		join connected_lesson c on c.conn_lesson_no = r.conn_lesson_no
		where c.teacher = #{userNo}
		AND r.review_state = 0
	</select>
	
	<select id="selectUserByNo" resultType="Map" >
		select m.*, a.tch_file_no, a.tch_file_rename, a.save_path
		    from membership m, (select f.tch_file_no, f.user_no fuser_no, f.tch_file_rename, f.save_path from teacherfile f
		    where tch_file_rename like 'profile%') a
		    where m.user_no = a.fuser_no(+)
		    and m.user_no = #{userNo}
	</select>

</mapper>



  
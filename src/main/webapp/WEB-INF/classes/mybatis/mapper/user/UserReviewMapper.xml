<?xml version="1.0" encoding="UTF-8"?>
<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  
<mapper namespace="UserReview">

	<!-- 과외 후기 목록 - 페이징 -->
	<select id="selectReviewList" parameterType="map" resultType="map">
	
		select * from (
			select rownum rnum, c.* from(
			
				select distinct r.*, m.user_id, f.lesson_title, tn.user_name
				from review r, membership m, connected_Lesson cl, find_lesson f,
				    (select m.*
				    from membership m, connected_lesson cl
				    where m.user_no = cl.teacher) tn
				where r.user_no = m.user_no 
					and cl.conn_lesson_no = r.conn_lesson_no
					and f.lesson_no = cl.lesson_no 
				    and cl.teacher = tn.user_no 
				    and cl.is_end = 1 
				    and r.review_state = 0
				    and cl.review_reg = 1 
				order by review_no desc

				) c
			) review
		where rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	
	</select>
	
	<!-- 모든 리뷰 수 조회 - 페이징 -->
	<select id="selectCntReview" resultType="int">
	
		select count(*) 
		from review
		where review_state = 0
	
	</select>


	<!-- 수강한 과외 목록(후기 쓸 수 있는 목록) -->
	<select id="selectLessonList" parameterType="int" resultType="map">
	
		select cl.conn_lesson_no, f.lesson_title, m.user_name
		from connected_lesson cl, find_lesson f, membership m
		where cl.student = #{userNo}
		    and cl.is_end = 1   
		    and cl.review_reg = 0 
		    and cl.teacher = m.user_no
		    and cl.lesson_no = f.lesson_no
	
	</select>
	
	
	<!-- 후기 등록 -->
	<insert id="insertReview" parameterType="Review">
	
		insert into review(review_no, review_content, user_no, conn_lesson_no, review_date, star_point, review_state)
		values(review_SEQ.nextval, #{reviewContent}, #{userNo}, #{connLessonNo}, sysdate, #{starPoint, jdbcType=INTEGER}, 0)
	
	</insert>
	
	<!-- 후기 등록 상태 변경 -->
	<update id="updateReviewReg" parameterType="int">
	
		update connected_lesson 
		set review_reg = 1 
		where conn_lesson_no = #{connLessonNo} 
	
	</update>


	<!-- 후기 검색 수 조회 -->
	<select id="selectCntReviewSearch" resultType="int">
	
		select count(*)
		from review r, find_lesson f, connected_lesson cl
		where r.review_state = 0
		    and f.lesson_no = cl.lesson_no
		    and r.conn_lesson_no = cl.conn_lesson_no
		    and f.lesson_title like '%' || #{keyword} || '%'
	
	</select>
	
	<!-- 검색된 후기 목록 -->
	<select id="selectReviewSearch" parameterType="map" resultType="map">
		
		select * from (
			select rownum rnum, c.* from(
			
				select distinct r.*, m.user_id, f.lesson_title, tn.user_name
				from review r, membership m, connected_Lesson cl, find_lesson f,
				    (select m.*
				    from membership m, connected_lesson cl
				    where m.user_no = cl.teacher) tn
				where r.user_no = m.user_no 
				    and cl.conn_lesson_no = r.conn_lesson_no
					and f.lesson_no = cl.lesson_no 
					and cl.teacher = tn.user_no 
					and cl.is_end = 1 
					and r.review_state = 0
					and cl.review_reg = 1 
				    and f.lesson_title like '%' || #{keyword} || '%'
				order by review_no desc

				) c
			) review
		where rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
		
	</select>
	
	
	

</mapper>